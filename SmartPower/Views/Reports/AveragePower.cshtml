@model List<SmartPower.Domin.report.AveragePowerTodayViewModel>

@{
    ViewData["Title"] = "AveragePower";
}

<script src="https://cdn.jsdelivr.net/npm/vue@2.6.0"></script>
<link href="~/assets/css/Loader.css" rel="stylesheet" />

<div class="container" id="app">

    <div class="row justify-content-center mb-4">
        <h2 class="text-center">
            {{title}} Report For : <span class="toggle">
                <span class="btn btn-round btn-secondary active" ref="CustomButton" v-on:click="ToggleReportMethod">{{report}}</span>
            </span>
        </h2>
    </div>




    <div class="row bt-4">
        <div class="col-4">
            <select v-model="Id" class="custom-select">
                <option disabled selected>Select</option>

                <option v-for="item in items" :key="item.id" :value="item.id">
                    {{item.name}}
                </option>

            </select>
        </div>
        <div class="col-3">
            <input class="form-control" type="date" v-model="fromdate" name="Fromdate" value="" />
        </div>
        <div class="col-3">
            <input class="form-control" type="date" v-model="todate" name="Todate" value="" />
        </div>

        <button v-if="isLoad" ref="LoadReportButton" class="btn" v-on:click="GetLoadReport()">  <div v-if="Loader" class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>  <span v-else>Get Load Report</span></button>
        <button v-else ref="FunctionReportButton" class="btn" v-on:click="GetFunctionReport()">  <div v-if="Loader" class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>  <span v-else>Get Function Report</span></button>
    </div>

    <table class="table mt-4">
        <thead>
            <tr>
                <th></th>
                <th></th>
                <th></th>
                <th colspan="4" style="border-right:1px solid #e0e0e4 ;border-left:1px solid #e0e0e4" class="text-center">Power (KW)</th>


            </tr>
            <tr>
                <th v-if="isLoad">
                    Load Name
                </th>
                <th v-else>Function Name</th>

                <th>
                    FromDate
                </th>
                <th>
                    ToDate
                </th>
                <th style="border-left:1px solid #e0e0e4">
                    I
                </th>
                <th>
                    II
                </th>
                <th style="border-right:1px solid #e0e0e4 ">
                    III
                </th>
                <th style="border-right:1px solid #e0e0e4 ">
                    Average Power
                </th>

            </tr>
        </thead>
        <tbody id="tbody">
            <tr>
                <td v-for="item of reportResult" v-if="item">{{item}}</td>
            </tr>
        </tbody>
    </table>
</div>

<script>
    var app = new Vue({
        async mounted() {
            const response = await fetch('/reports/getloads')
            const myjson = await response.json()
            this.items = myjson
        },
        el: '#app',

        data: {
            title: 'Average Power',
            Id: "Select",
            FunctionId: "Select Function",
            items: null,
            fromdate: null,
            todate: null,
            isLoad: true,
            report: "Load",
            Loader:false,
            reportResult: null
        },
        methods: {
            async GetLoadReport() {
                console.log(this.Id, this.fromdate, this.todate)
                let data = JSON.stringify({ id: this.Id, fromdate: this.fromdate, todate: this.todate })
                this.$refs.LoadReportButton.classList.toggle("disabled")
                this.Loader = !this.Loader
                const response = await fetch('/reports/AverageLoadPowerToday', {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: data
                })
                const myjson = await response.json()
                this.reportResult = myjson
                this.$refs.LoadReportButton.classList.toggle("disabled")
                this.Loader = !this.Loader
            },
            async GetFunctionReport() {
                let data = JSON.stringify({ id: this.Id, fromdate: this.fromdate, todate: this.todate })
                this.$refs.FunctionReportButton.classList.toggle("disabled")
                this.Loader = !this.Loader
                const response = await fetch('/reports/AverageFunctionPowerToday', {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: data
                })

                const myjson = await response.json()
                this.reportResult = myjson
                this.$refs.FunctionReportButton.classList.toggle("disabled")
                this.Loader = !this.Loader
            },
            async ToggleReportMethod() {
                this.reportResult = null
                console.log(this.$refs.CustomButton)
                this.$refs.CustomButton.classList.toggle('btn-dark')
                if (this.report == "Load") {
                    const response = await fetch('/reports/getfunctions')
                    const myjson = await response.json()
                    this.items = myjson
                    this.report = "Function"
                    this.isLoad = false
                } else {
                    const response = await fetch('/reports/getloads')
                    const myjson = await response.json()
                    this.items = myjson
                    this.report = "Load"
                    this.isLoad = true
                }
            }
        }
    })
</script>
<script>
</script>